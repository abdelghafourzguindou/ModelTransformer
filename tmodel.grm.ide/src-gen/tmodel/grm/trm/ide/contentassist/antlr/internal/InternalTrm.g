/*
 * generated by Xtext 2.12.0
 */
grammar InternalTrm;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package tmodel.grm.trm.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package tmodel.grm.trm.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import tmodel.grm.trm.services.TrmGrammarAccess;

}
@parser::members {
	private TrmGrammarAccess grammarAccess;

	public void setGrammarAccess(TrmGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRunner
entryRuleRunner
:
{ before(grammarAccess.getRunnerRule()); }
	 ruleRunner
{ after(grammarAccess.getRunnerRule()); } 
	 EOF 
;

// Rule Runner
ruleRunner 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRunnerAccess().getGroup()); }
		(rule__Runner__Group__0)
		{ after(grammarAccess.getRunnerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoader
entryRuleLoader
:
{ before(grammarAccess.getLoaderRule()); }
	 ruleLoader
{ after(grammarAccess.getLoaderRule()); } 
	 EOF 
;

// Rule Loader
ruleLoader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoaderAccess().getAlternatives()); }
		(rule__Loader__Alternatives)
		{ after(grammarAccess.getLoaderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoadMetaModel
entryRuleLoadMetaModel
:
{ before(grammarAccess.getLoadMetaModelRule()); }
	 ruleLoadMetaModel
{ after(grammarAccess.getLoadMetaModelRule()); } 
	 EOF 
;

// Rule LoadMetaModel
ruleLoadMetaModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadMetaModelAccess().getGroup()); }
		(rule__LoadMetaModel__Group__0)
		{ after(grammarAccess.getLoadMetaModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoadModel
entryRuleLoadModel
:
{ before(grammarAccess.getLoadModelRule()); }
	 ruleLoadModel
{ after(grammarAccess.getLoadModelRule()); } 
	 EOF 
;

// Rule LoadModel
ruleLoadModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadModelAccess().getGroup()); }
		(rule__LoadModel__Group__0)
		{ after(grammarAccess.getLoadModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMAttribute
entryRuleMAttribute
:
{ before(grammarAccess.getMAttributeRule()); }
	 ruleMAttribute
{ after(grammarAccess.getMAttributeRule()); } 
	 EOF 
;

// Rule MAttribute
ruleMAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMAttributeAccess().getGroup()); }
		(rule__MAttribute__Group__0)
		{ after(grammarAccess.getMAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhereClause
entryRuleWhereClause
:
{ before(grammarAccess.getWhereClauseRule()); }
	 ruleWhereClause
{ after(grammarAccess.getWhereClauseRule()); } 
	 EOF 
;

// Rule WhereClause
ruleWhereClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhereClauseAccess().getGroup()); }
		(rule__WhereClause__Group__0)
		{ after(grammarAccess.getWhereClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelete
entryRuleDelete
:
{ before(grammarAccess.getDeleteRule()); }
	 ruleDelete
{ after(grammarAccess.getDeleteRule()); } 
	 EOF 
;

// Rule Delete
ruleDelete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteAccess().getGroup()); }
		(rule__Delete__Group__0)
		{ after(grammarAccess.getDeleteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoaderAccess().getLoadMetaModelParserRuleCall_0()); }
		ruleLoadMetaModel
		{ after(grammarAccess.getLoaderAccess().getLoadMetaModelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoaderAccess().getLoadModelParserRuleCall_1()); }
		ruleLoadModel
		{ after(grammarAccess.getLoaderAccess().getLoadModelParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getAddParserRuleCall_0_0()); }
		ruleAdd
		{ after(grammarAccess.getOperationAccess().getAddParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getUpdateParserRuleCall_0_1()); }
		ruleUpdate
		{ after(grammarAccess.getOperationAccess().getUpdateParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getDeleteParserRuleCall_0_2()); }
		ruleDelete
		{ after(grammarAccess.getOperationAccess().getDeleteParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__0__Impl
	rule__Runner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getLoadKeyword_0()); }
	'load'
	{ after(grammarAccess.getRunnerAccess().getLoadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__1__Impl
	rule__Runner__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRunnerAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__2__Impl
	rule__Runner__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getLoaderAssignment_2()); }
	(rule__Runner__LoaderAssignment_2)
	{ after(grammarAccess.getRunnerAccess().getLoaderAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__3__Impl
	rule__Runner__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getRunnerAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__4__Impl
	rule__Runner__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getLoaderAssignment_4()); }
	(rule__Runner__LoaderAssignment_4)
	{ after(grammarAccess.getRunnerAccess().getLoaderAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__5__Impl
	rule__Runner__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getRunnerAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__6__Impl
	rule__Runner__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getBeginKeyword_6()); }
	'begin:'
	{ after(grammarAccess.getRunnerAccess().getBeginKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__7__Impl
	rule__Runner__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getOperationsAssignment_7()); }
	(rule__Runner__OperationsAssignment_7)
	{ after(grammarAccess.getRunnerAccess().getOperationsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__8__Impl
	rule__Runner__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getOperationsAssignment_8()); }
	(rule__Runner__OperationsAssignment_8)*
	{ after(grammarAccess.getRunnerAccess().getOperationsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Runner__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRunnerAccess().getEndKeyword_9()); }
	'end'
	{ after(grammarAccess.getRunnerAccess().getEndKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getAlternatives_0()); }
	(rule__Operation__Alternatives_0)
	{ after(grammarAccess.getOperationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getOperationAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoadMetaModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadMetaModel__Group__0__Impl
	rule__LoadMetaModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadMetaModelAccess().getMetamodelKeyword_0()); }
	'metamodel'
	{ after(grammarAccess.getLoadMetaModelAccess().getMetamodelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadMetaModel__Group__1__Impl
	rule__LoadMetaModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadMetaModelAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getLoadMetaModelAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadMetaModel__Group__2__Impl
	rule__LoadMetaModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadMetaModelAccess().getLoadMetaModelAction_2()); }
	()
	{ after(grammarAccess.getLoadMetaModelAccess().getLoadMetaModelAction_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadMetaModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadMetaModelAccess().getUrlAssignment_3()); }
	(rule__LoadMetaModel__UrlAssignment_3)
	{ after(grammarAccess.getLoadMetaModelAccess().getUrlAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoadModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadModel__Group__0__Impl
	rule__LoadModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getLoadModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadModel__Group__1__Impl
	rule__LoadModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadModelAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getLoadModelAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadModel__Group__2__Impl
	rule__LoadModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadModelAccess().getLoadModelAction_2()); }
	()
	{ after(grammarAccess.getLoadModelAccess().getLoadModelAction_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadModelAccess().getUrlAssignment_3()); }
	(rule__LoadModel__UrlAssignment_3)
	{ after(grammarAccess.getLoadModelAccess().getUrlAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MAttribute__Group__0__Impl
	rule__MAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMAttributeAccess().getMAttributeAction_0()); }
	()
	{ after(grammarAccess.getMAttributeAccess().getMAttributeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MAttribute__Group__1__Impl
	rule__MAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMAttributeAccess().getNameAssignment_1()); }
	(rule__MAttribute__NameAssignment_1)
	{ after(grammarAccess.getMAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MAttribute__Group__2__Impl
	rule__MAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMAttributeAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getMAttributeAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMAttributeAccess().getValueAssignment_3()); }
	(rule__MAttribute__ValueAssignment_3)
	{ after(grammarAccess.getMAttributeAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__0__Impl
	rule__WhereClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getWhereKeyword_0()); }
	'where'
	{ after(grammarAccess.getWhereClauseAccess().getWhereKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__1__Impl
	rule__WhereClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhereClauseAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__2__Impl
	rule__WhereClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getConditionsAssignment_2()); }
	(rule__WhereClause__ConditionsAssignment_2)
	{ after(grammarAccess.getWhereClauseAccess().getConditionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__3__Impl
	rule__WhereClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getGroup_3()); }
	(rule__WhereClause__Group_3__0)*
	{ after(grammarAccess.getWhereClauseAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWhereClauseAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhereClause__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group_3__0__Impl
	rule__WhereClause__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getWhereClauseAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhereClause__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereClauseAccess().getConditionsAssignment_3_1()); }
	(rule__WhereClause__ConditionsAssignment_3_1)
	{ after(grammarAccess.getWhereClauseAccess().getConditionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAddAction_0()); }
	()
	{ after(grammarAccess.getAddAccess().getAddAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAddKeyword_1()); }
	'add'
	{ after(grammarAccess.getAddAccess().getAddKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getCibleElementAssignment_2()); }
	(rule__Add__CibleElementAssignment_2)
	{ after(grammarAccess.getAddAccess().getCibleElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getGroup_3()); }
	(rule__Add__Group_3__0)?
	{ after(grammarAccess.getAddAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getGroup_4()); }
	(rule__Add__Group_4__0)?
	{ after(grammarAccess.getAddAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getWhereClauseAssignment_5()); }
	(rule__Add__WhereClauseAssignment_5)?
	{ after(grammarAccess.getAddAccess().getWhereClauseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_3__0__Impl
	rule__Add__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getInKeyword_3_0()); }
	'in'
	{ after(grammarAccess.getAddAccess().getInKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getInAssignment_3_1()); }
	(rule__Add__InAssignment_3_1)
	{ after(grammarAccess.getAddAccess().getInAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4__0__Impl
	rule__Add__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getWithKeyword_4_0()); }
	'with'
	{ after(grammarAccess.getAddAccess().getWithKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4__1__Impl
	rule__Add__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getAddAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4__2__Impl
	rule__Add__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAttributesAssignment_4_2()); }
	(rule__Add__AttributesAssignment_4_2)
	{ after(grammarAccess.getAddAccess().getAttributesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4__3__Impl
	rule__Add__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getGroup_4_3()); }
	(rule__Add__Group_4_3__0)*
	{ after(grammarAccess.getAddAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getAddAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4_3__0__Impl
	rule__Add__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getAddAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAttributesAssignment_4_3_1()); }
	(rule__Add__AttributesAssignment_4_3_1)
	{ after(grammarAccess.getAddAccess().getAttributesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
	()
	{ after(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateKeyword_1()); }
	'update'
	{ after(grammarAccess.getUpdateAccess().getUpdateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__2__Impl
	rule__Update__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getCibleElementAssignment_2()); }
	(rule__Update__CibleElementAssignment_2)
	{ after(grammarAccess.getUpdateAccess().getCibleElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__3__Impl
	rule__Update__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getSetKeyword_3()); }
	'set'
	{ after(grammarAccess.getUpdateAccess().getSetKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__4__Impl
	rule__Update__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getUpdateAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__5__Impl
	rule__Update__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getAttributesAssignment_5()); }
	(rule__Update__AttributesAssignment_5)
	{ after(grammarAccess.getUpdateAccess().getAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__6__Impl
	rule__Update__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getGroup_6()); }
	(rule__Update__Group_6__0)*
	{ after(grammarAccess.getUpdateAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__7__Impl
	rule__Update__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getUpdateAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getWhereClauseAssignment_8()); }
	(rule__Update__WhereClauseAssignment_8)?
	{ after(grammarAccess.getUpdateAccess().getWhereClauseAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_6__0__Impl
	rule__Update__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getUpdateAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getAttributesAssignment_6_1()); }
	(rule__Update__AttributesAssignment_6_1)
	{ after(grammarAccess.getUpdateAccess().getAttributesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__0__Impl
	rule__Delete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
	()
	{ after(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__1__Impl
	rule__Delete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteKeyword_1()); }
	'delete'
	{ after(grammarAccess.getDeleteAccess().getDeleteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__2__Impl
	rule__Delete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getCibleElementAssignment_2()); }
	(rule__Delete__CibleElementAssignment_2)
	{ after(grammarAccess.getDeleteAccess().getCibleElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getWhereClauseAssignment_3()); }
	(rule__Delete__WhereClauseAssignment_3)?
	{ after(grammarAccess.getDeleteAccess().getWhereClauseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Runner__LoaderAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunnerAccess().getLoaderLoaderParserRuleCall_2_0()); }
		ruleLoader
		{ after(grammarAccess.getRunnerAccess().getLoaderLoaderParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__LoaderAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunnerAccess().getLoaderLoaderParserRuleCall_4_0()); }
		ruleLoader
		{ after(grammarAccess.getRunnerAccess().getLoaderLoaderParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__OperationsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunnerAccess().getOperationsOperationParserRuleCall_7_0()); }
		ruleOperation
		{ after(grammarAccess.getRunnerAccess().getOperationsOperationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Runner__OperationsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRunnerAccess().getOperationsOperationParserRuleCall_8_0()); }
		ruleOperation
		{ after(grammarAccess.getRunnerAccess().getOperationsOperationParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadMetaModel__UrlAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadMetaModelAccess().getUrlEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getLoadMetaModelAccess().getUrlEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__UrlAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadModelAccess().getUrlEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getLoadModelAccess().getUrlEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MAttribute__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMAttributeAccess().getValueEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getMAttributeAccess().getValueEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__ConditionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereClauseAccess().getConditionsMAttributeParserRuleCall_2_0()); }
		ruleMAttribute
		{ after(grammarAccess.getWhereClauseAccess().getConditionsMAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhereClause__ConditionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereClauseAccess().getConditionsMAttributeParserRuleCall_3_1_0()); }
		ruleMAttribute
		{ after(grammarAccess.getWhereClauseAccess().getConditionsMAttributeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__CibleElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getCibleElementEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getAddAccess().getCibleElementEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__InAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getInEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getAddAccess().getInEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__AttributesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getAttributesMAttributeParserRuleCall_4_2_0()); }
		ruleMAttribute
		{ after(grammarAccess.getAddAccess().getAttributesMAttributeParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__AttributesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getAttributesMAttributeParserRuleCall_4_3_1_0()); }
		ruleMAttribute
		{ after(grammarAccess.getAddAccess().getAttributesMAttributeParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__WhereClauseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getWhereClauseWhereClauseParserRuleCall_5_0()); }
		ruleWhereClause
		{ after(grammarAccess.getAddAccess().getWhereClauseWhereClauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__CibleElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getCibleElementEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getUpdateAccess().getCibleElementEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getAttributesMAttributeParserRuleCall_5_0()); }
		ruleMAttribute
		{ after(grammarAccess.getUpdateAccess().getAttributesMAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__AttributesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getAttributesMAttributeParserRuleCall_6_1_0()); }
		ruleMAttribute
		{ after(grammarAccess.getUpdateAccess().getAttributesMAttributeParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__WhereClauseAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getWhereClauseWhereClauseParserRuleCall_8_0()); }
		ruleWhereClause
		{ after(grammarAccess.getUpdateAccess().getWhereClauseWhereClauseParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__CibleElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getCibleElementEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getDeleteAccess().getCibleElementEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__WhereClauseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getWhereClauseWhereClauseParserRuleCall_3_0()); }
		ruleWhereClause
		{ after(grammarAccess.getDeleteAccess().getWhereClauseWhereClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

/*
 * generated by Xtext 2.12.0
 */
package tmodel.grm.trm.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TrmGrammarAccess extends AbstractGrammarElementFinder {
	
	public class RunnerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.Runner");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLoaderAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLoaderLoaderParserRuleCall_2_0 = (RuleCall)cLoaderAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLoaderAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLoaderLoaderParserRuleCall_4_0 = (RuleCall)cLoaderAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cBeginKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOperationsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOperationsOperationParserRuleCall_7_0 = (RuleCall)cOperationsAssignment_7.eContents().get(0);
		private final Assignment cOperationsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOperationsOperationParserRuleCall_8_0 = (RuleCall)cOperationsAssignment_8.eContents().get(0);
		private final Keyword cEndKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Runner:
		//	'load'
		//	'{'
		//	loader+=Loader "," loader+=Loader
		//	'}'
		//	'begin:'
		//	operations+=Operation operations+=Operation*
		//	'end';
		@Override public ParserRule getRule() { return rule; }
		
		//'load' '{' loader+=Loader "," loader+=Loader '}' 'begin:' operations+=Operation operations+=Operation* 'end'
		public Group getGroup() { return cGroup; }
		
		//'load'
		public Keyword getLoadKeyword_0() { return cLoadKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//loader+=Loader
		public Assignment getLoaderAssignment_2() { return cLoaderAssignment_2; }
		
		//Loader
		public RuleCall getLoaderLoaderParserRuleCall_2_0() { return cLoaderLoaderParserRuleCall_2_0; }
		
		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//loader+=Loader
		public Assignment getLoaderAssignment_4() { return cLoaderAssignment_4; }
		
		//Loader
		public RuleCall getLoaderLoaderParserRuleCall_4_0() { return cLoaderLoaderParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
		
		//'begin:'
		public Keyword getBeginKeyword_6() { return cBeginKeyword_6; }
		
		//operations+=Operation
		public Assignment getOperationsAssignment_7() { return cOperationsAssignment_7; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_7_0() { return cOperationsOperationParserRuleCall_7_0; }
		
		//operations+=Operation*
		public Assignment getOperationsAssignment_8() { return cOperationsAssignment_8; }
		
		//Operation
		public RuleCall getOperationsOperationParserRuleCall_8_0() { return cOperationsOperationParserRuleCall_8_0; }
		
		//'end'
		public Keyword getEndKeyword_9() { return cEndKeyword_9; }
	}
	public class LoaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.Loader");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLoadMetaModelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLoadModelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Loader:
		//	LoadMetaModel | LoadModel;
		@Override public ParserRule getRule() { return rule; }
		
		//LoadMetaModel | LoadModel
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LoadMetaModel
		public RuleCall getLoadMetaModelParserRuleCall_0() { return cLoadMetaModelParserRuleCall_0; }
		
		//LoadModel
		public RuleCall getLoadModelParserRuleCall_1() { return cLoadModelParserRuleCall_1; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cAddParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cUpdateParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final RuleCall cDeleteParserRuleCall_0_2 = (RuleCall)cAlternatives_0.eContents().get(2);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Operation:
		//	(Add | Update | Delete)
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//(Add | Update | Delete) ';'
		public Group getGroup() { return cGroup; }
		
		//Add | Update | Delete
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//Add
		public RuleCall getAddParserRuleCall_0_0() { return cAddParserRuleCall_0_0; }
		
		//Update
		public RuleCall getUpdateParserRuleCall_0_1() { return cUpdateParserRuleCall_0_1; }
		
		//Delete
		public RuleCall getDeleteParserRuleCall_0_2() { return cDeleteParserRuleCall_0_2; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class LoadMetaModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.LoadMetaModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetamodelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Action cLoadMetaModelAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cUrlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrlEStringParserRuleCall_3_0 = (RuleCall)cUrlAssignment_3.eContents().get(0);
		
		//LoadMetaModel:
		//	'metamodel' 'from' {LoadMetaModel} url=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'metamodel' 'from' {LoadMetaModel} url=EString
		public Group getGroup() { return cGroup; }
		
		//'metamodel'
		public Keyword getMetamodelKeyword_0() { return cMetamodelKeyword_0; }
		
		//'from'
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }
		
		//{LoadMetaModel}
		public Action getLoadMetaModelAction_2() { return cLoadMetaModelAction_2; }
		
		//url=EString
		public Assignment getUrlAssignment_3() { return cUrlAssignment_3; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_3_0() { return cUrlEStringParserRuleCall_3_0; }
	}
	public class LoadModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.LoadModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Action cLoadModelAction_2 = (Action)cGroup.eContents().get(2);
		private final Assignment cUrlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrlEStringParserRuleCall_3_0 = (RuleCall)cUrlAssignment_3.eContents().get(0);
		
		//LoadModel:
		//	'model' 'from' {LoadModel} url=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'model' 'from' {LoadModel} url=EString
		public Group getGroup() { return cGroup; }
		
		//'model'
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }
		
		//'from'
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }
		
		//{LoadModel}
		public Action getLoadModelAction_2() { return cLoadModelAction_2; }
		
		//url=EString
		public Assignment getUrlAssignment_3() { return cUrlAssignment_3; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_3_0() { return cUrlEStringParserRuleCall_3_0; }
	}
	public class MAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.MAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//MAttribute:
		//	{MAttribute} name=ID
		//	'=' value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{MAttribute} name=ID '=' value=EString
		public Group getGroup() { return cGroup; }
		
		//{MAttribute}
		public Action getMAttributeAction_0() { return cMAttributeAction_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}
	public class WhereClauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.WhereClause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhereKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditionsMAttributeParserRuleCall_2_0 = (RuleCall)cConditionsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cConditionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cConditionsMAttributeParserRuleCall_3_1_0 = (RuleCall)cConditionsAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//WhereClause:
		//	'where'
		//	'('
		//	conditions+=MAttribute ("," conditions+=MAttribute)*
		//	')';
		@Override public ParserRule getRule() { return rule; }
		
		//'where' '(' conditions+=MAttribute ("," conditions+=MAttribute)* ')'
		public Group getGroup() { return cGroup; }
		
		//'where'
		public Keyword getWhereKeyword_0() { return cWhereKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//conditions+=MAttribute
		public Assignment getConditionsAssignment_2() { return cConditionsAssignment_2; }
		
		//MAttribute
		public RuleCall getConditionsMAttributeParserRuleCall_2_0() { return cConditionsMAttributeParserRuleCall_2_0; }
		
		//("," conditions+=MAttribute)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//conditions+=MAttribute
		public Assignment getConditionsAssignment_3_1() { return cConditionsAssignment_3_1; }
		
		//MAttribute
		public RuleCall getConditionsMAttributeParserRuleCall_3_1_0() { return cConditionsMAttributeParserRuleCall_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class AddElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.Add");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAddAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAddKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCibleElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCibleElementEStringParserRuleCall_2_0 = (RuleCall)cCibleElementAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cInAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInEStringParserRuleCall_3_1_0 = (RuleCall)cInAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cWithKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAttributesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAttributesMAttributeParserRuleCall_4_2_0 = (RuleCall)cAttributesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAttributesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAttributesMAttributeParserRuleCall_4_3_1_0 = (RuleCall)cAttributesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Assignment cWhereClauseAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWhereClauseWhereClauseParserRuleCall_5_0 = (RuleCall)cWhereClauseAssignment_5.eContents().get(0);
		
		//Add:
		//	{Add}
		//	'add'
		//	cibleElement=EString ('in' in=EString)? ('with'
		//	'('
		//	attributes+=MAttribute ("," attributes+=MAttribute)*
		//	')')?
		//	whereClause=WhereClause?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Add} 'add' cibleElement=EString ('in' in=EString)? ('with' '(' attributes+=MAttribute ("," attributes+=MAttribute)*
		//')')? whereClause=WhereClause?
		public Group getGroup() { return cGroup; }
		
		//{Add}
		public Action getAddAction_0() { return cAddAction_0; }
		
		//'add'
		public Keyword getAddKeyword_1() { return cAddKeyword_1; }
		
		//cibleElement=EString
		public Assignment getCibleElementAssignment_2() { return cCibleElementAssignment_2; }
		
		//EString
		public RuleCall getCibleElementEStringParserRuleCall_2_0() { return cCibleElementEStringParserRuleCall_2_0; }
		
		//('in' in=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'in'
		public Keyword getInKeyword_3_0() { return cInKeyword_3_0; }
		
		//in=EString
		public Assignment getInAssignment_3_1() { return cInAssignment_3_1; }
		
		//EString
		public RuleCall getInEStringParserRuleCall_3_1_0() { return cInEStringParserRuleCall_3_1_0; }
		
		//('with' '(' attributes+=MAttribute ("," attributes+=MAttribute)* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'with'
		public Keyword getWithKeyword_4_0() { return cWithKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//attributes+=MAttribute
		public Assignment getAttributesAssignment_4_2() { return cAttributesAssignment_4_2; }
		
		//MAttribute
		public RuleCall getAttributesMAttributeParserRuleCall_4_2_0() { return cAttributesMAttributeParserRuleCall_4_2_0; }
		
		//("," attributes+=MAttribute)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//attributes+=MAttribute
		public Assignment getAttributesAssignment_4_3_1() { return cAttributesAssignment_4_3_1; }
		
		//MAttribute
		public RuleCall getAttributesMAttributeParserRuleCall_4_3_1_0() { return cAttributesMAttributeParserRuleCall_4_3_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//whereClause=WhereClause?
		public Assignment getWhereClauseAssignment_5() { return cWhereClauseAssignment_5; }
		
		//WhereClause
		public RuleCall getWhereClauseWhereClauseParserRuleCall_5_0() { return cWhereClauseWhereClauseParserRuleCall_5_0; }
	}
	public class UpdateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.Update");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUpdateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUpdateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCibleElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCibleElementEStringParserRuleCall_2_0 = (RuleCall)cCibleElementAssignment_2.eContents().get(0);
		private final Keyword cSetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAttributesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAttributesMAttributeParserRuleCall_5_0 = (RuleCall)cAttributesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAttributesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAttributesMAttributeParserRuleCall_6_1_0 = (RuleCall)cAttributesAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cWhereClauseAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cWhereClauseWhereClauseParserRuleCall_8_0 = (RuleCall)cWhereClauseAssignment_8.eContents().get(0);
		
		//Update:
		//	{Update}
		//	'update'
		//	cibleElement=EString
		//	'set'
		//	'(' attributes+=MAttribute ("," attributes+=MAttribute)* ')'
		//	whereClause=WhereClause?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Update} 'update' cibleElement=EString 'set' '(' attributes+=MAttribute ("," attributes+=MAttribute)* ')'
		//whereClause=WhereClause?
		public Group getGroup() { return cGroup; }
		
		//{Update}
		public Action getUpdateAction_0() { return cUpdateAction_0; }
		
		//'update'
		public Keyword getUpdateKeyword_1() { return cUpdateKeyword_1; }
		
		//cibleElement=EString
		public Assignment getCibleElementAssignment_2() { return cCibleElementAssignment_2; }
		
		//EString
		public RuleCall getCibleElementEStringParserRuleCall_2_0() { return cCibleElementEStringParserRuleCall_2_0; }
		
		//'set'
		public Keyword getSetKeyword_3() { return cSetKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//attributes+=MAttribute
		public Assignment getAttributesAssignment_5() { return cAttributesAssignment_5; }
		
		//MAttribute
		public RuleCall getAttributesMAttributeParserRuleCall_5_0() { return cAttributesMAttributeParserRuleCall_5_0; }
		
		//("," attributes+=MAttribute)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//attributes+=MAttribute
		public Assignment getAttributesAssignment_6_1() { return cAttributesAssignment_6_1; }
		
		//MAttribute
		public RuleCall getAttributesMAttributeParserRuleCall_6_1_0() { return cAttributesMAttributeParserRuleCall_6_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//whereClause=WhereClause?
		public Assignment getWhereClauseAssignment_8() { return cWhereClauseAssignment_8; }
		
		//WhereClause
		public RuleCall getWhereClauseWhereClauseParserRuleCall_8_0() { return cWhereClauseWhereClauseParserRuleCall_8_0; }
	}
	public class DeleteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "tmodel.grm.trm.Trm.Delete");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDeleteAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDeleteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCibleElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCibleElementEStringParserRuleCall_2_0 = (RuleCall)cCibleElementAssignment_2.eContents().get(0);
		private final Assignment cWhereClauseAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWhereClauseWhereClauseParserRuleCall_3_0 = (RuleCall)cWhereClauseAssignment_3.eContents().get(0);
		
		//Delete:
		//	{Delete}
		//	'delete'
		//	cibleElement=EString
		//	whereClause=WhereClause?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Delete} 'delete' cibleElement=EString whereClause=WhereClause?
		public Group getGroup() { return cGroup; }
		
		//{Delete}
		public Action getDeleteAction_0() { return cDeleteAction_0; }
		
		//'delete'
		public Keyword getDeleteKeyword_1() { return cDeleteKeyword_1; }
		
		//cibleElement=EString
		public Assignment getCibleElementAssignment_2() { return cCibleElementAssignment_2; }
		
		//EString
		public RuleCall getCibleElementEStringParserRuleCall_2_0() { return cCibleElementEStringParserRuleCall_2_0; }
		
		//whereClause=WhereClause?
		public Assignment getWhereClauseAssignment_3() { return cWhereClauseAssignment_3; }
		
		//WhereClause
		public RuleCall getWhereClauseWhereClauseParserRuleCall_3_0() { return cWhereClauseWhereClauseParserRuleCall_3_0; }
	}
	
	
	private final RunnerElements pRunner;
	private final LoaderElements pLoader;
	private final OperationElements pOperation;
	private final EStringElements pEString;
	private final LoadMetaModelElements pLoadMetaModel;
	private final LoadModelElements pLoadModel;
	private final MAttributeElements pMAttribute;
	private final WhereClauseElements pWhereClause;
	private final AddElements pAdd;
	private final UpdateElements pUpdate;
	private final DeleteElements pDelete;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TrmGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRunner = new RunnerElements();
		this.pLoader = new LoaderElements();
		this.pOperation = new OperationElements();
		this.pEString = new EStringElements();
		this.pLoadMetaModel = new LoadMetaModelElements();
		this.pLoadModel = new LoadModelElements();
		this.pMAttribute = new MAttributeElements();
		this.pWhereClause = new WhereClauseElements();
		this.pAdd = new AddElements();
		this.pUpdate = new UpdateElements();
		this.pDelete = new DeleteElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("tmodel.grm.trm.Trm".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Runner:
	//	'load'
	//	'{'
	//	loader+=Loader "," loader+=Loader
	//	'}'
	//	'begin:'
	//	operations+=Operation operations+=Operation*
	//	'end';
	public RunnerElements getRunnerAccess() {
		return pRunner;
	}
	
	public ParserRule getRunnerRule() {
		return getRunnerAccess().getRule();
	}
	
	//Loader:
	//	LoadMetaModel | LoadModel;
	public LoaderElements getLoaderAccess() {
		return pLoader;
	}
	
	public ParserRule getLoaderRule() {
		return getLoaderAccess().getRule();
	}
	
	//Operation:
	//	(Add | Update | Delete)
	//	';';
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//LoadMetaModel:
	//	'metamodel' 'from' {LoadMetaModel} url=EString;
	public LoadMetaModelElements getLoadMetaModelAccess() {
		return pLoadMetaModel;
	}
	
	public ParserRule getLoadMetaModelRule() {
		return getLoadMetaModelAccess().getRule();
	}
	
	//LoadModel:
	//	'model' 'from' {LoadModel} url=EString;
	public LoadModelElements getLoadModelAccess() {
		return pLoadModel;
	}
	
	public ParserRule getLoadModelRule() {
		return getLoadModelAccess().getRule();
	}
	
	//MAttribute:
	//	{MAttribute} name=ID
	//	'=' value=EString;
	public MAttributeElements getMAttributeAccess() {
		return pMAttribute;
	}
	
	public ParserRule getMAttributeRule() {
		return getMAttributeAccess().getRule();
	}
	
	//WhereClause:
	//	'where'
	//	'('
	//	conditions+=MAttribute ("," conditions+=MAttribute)*
	//	')';
	public WhereClauseElements getWhereClauseAccess() {
		return pWhereClause;
	}
	
	public ParserRule getWhereClauseRule() {
		return getWhereClauseAccess().getRule();
	}
	
	//Add:
	//	{Add}
	//	'add'
	//	cibleElement=EString ('in' in=EString)? ('with'
	//	'('
	//	attributes+=MAttribute ("," attributes+=MAttribute)*
	//	')')?
	//	whereClause=WhereClause?;
	public AddElements getAddAccess() {
		return pAdd;
	}
	
	public ParserRule getAddRule() {
		return getAddAccess().getRule();
	}
	
	//Update:
	//	{Update}
	//	'update'
	//	cibleElement=EString
	//	'set'
	//	'(' attributes+=MAttribute ("," attributes+=MAttribute)* ')'
	//	whereClause=WhereClause?;
	public UpdateElements getUpdateAccess() {
		return pUpdate;
	}
	
	public ParserRule getUpdateRule() {
		return getUpdateAccess().getRule();
	}
	
	//Delete:
	//	{Delete}
	//	'delete'
	//	cibleElement=EString
	//	whereClause=WhereClause?;
	public DeleteElements getDeleteAccess() {
		return pDelete;
	}
	
	public ParserRule getDeleteRule() {
		return getDeleteAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}

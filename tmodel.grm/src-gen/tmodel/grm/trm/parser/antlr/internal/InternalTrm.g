/*
 * generated by Xtext 2.12.0
 */
grammar InternalTrm;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package tmodel.grm.trm.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package tmodel.grm.trm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import tmodel.grm.trm.services.TrmGrammarAccess;

}

@parser::members {

 	private TrmGrammarAccess grammarAccess;

    public InternalTrmParser(TokenStream input, TrmGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Runner";
   	}

   	@Override
   	protected TrmGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRunner
entryRuleRunner returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRunnerRule()); }
	iv_ruleRunner=ruleRunner
	{ $current=$iv_ruleRunner.current; }
	EOF;

// Rule Runner
ruleRunner returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='load'
		{
			newLeafNode(otherlv_0, grammarAccess.getRunnerAccess().getLoadKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRunnerAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRunnerAccess().getLoaderLoaderParserRuleCall_2_0());
				}
				lv_loader_2_0=ruleLoader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRunnerRule());
					}
					add(
						$current,
						"loader",
						lv_loader_2_0,
						"tmodel.grm.trm.Trm.Loader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRunnerAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRunnerAccess().getLoaderLoaderParserRuleCall_4_0());
				}
				lv_loader_4_0=ruleLoader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRunnerRule());
					}
					add(
						$current,
						"loader",
						lv_loader_4_0,
						"tmodel.grm.trm.Trm.Loader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getRunnerAccess().getRightCurlyBracketKeyword_5());
		}
		otherlv_6='begin:'
		{
			newLeafNode(otherlv_6, grammarAccess.getRunnerAccess().getBeginKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRunnerAccess().getOperationsOperationParserRuleCall_7_0());
				}
				lv_operations_7_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRunnerRule());
					}
					add(
						$current,
						"operations",
						lv_operations_7_0,
						"tmodel.grm.trm.Trm.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRunnerAccess().getOperationsOperationParserRuleCall_8_0());
				}
				lv_operations_8_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRunnerRule());
					}
					add(
						$current,
						"operations",
						lv_operations_8_0,
						"tmodel.grm.trm.Trm.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9='end'
		{
			newLeafNode(otherlv_9, grammarAccess.getRunnerAccess().getEndKeyword_9());
		}
	)
;

// Entry rule entryRuleLoader
entryRuleLoader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoaderRule()); }
	iv_ruleLoader=ruleLoader
	{ $current=$iv_ruleLoader.current; }
	EOF;

// Rule Loader
ruleLoader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoaderAccess().getLoadMetaModelParserRuleCall_0());
		}
		this_LoadMetaModel_0=ruleLoadMetaModel
		{
			$current = $this_LoadMetaModel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoaderAccess().getLoadModelParserRuleCall_1());
		}
		this_LoadModel_1=ruleLoadModel
		{
			$current = $this_LoadModel_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getOperationAccess().getAddParserRuleCall_0_0());
			}
			this_Add_0=ruleAdd
			{
				$current = $this_Add_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getOperationAccess().getUpdateParserRuleCall_0_1());
			}
			this_Update_1=ruleUpdate
			{
				$current = $this_Update_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getOperationAccess().getDeleteParserRuleCall_0_2());
			}
			this_Delete_2=ruleDelete
			{
				$current = $this_Delete_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleLoadMetaModel
entryRuleLoadMetaModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadMetaModelRule()); }
	iv_ruleLoadMetaModel=ruleLoadMetaModel
	{ $current=$iv_ruleLoadMetaModel.current; }
	EOF;

// Rule LoadMetaModel
ruleLoadMetaModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metamodel'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoadMetaModelAccess().getMetamodelKeyword_0());
		}
		otherlv_1='from'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoadMetaModelAccess().getFromKeyword_1());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoadMetaModelAccess().getLoadMetaModelAction_2(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadMetaModelAccess().getUrlEStringParserRuleCall_3_0());
				}
				lv_url_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadMetaModelRule());
					}
					set(
						$current,
						"url",
						lv_url_3_0,
						"tmodel.grm.trm.Trm.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLoadModel
entryRuleLoadModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadModelRule()); }
	iv_ruleLoadModel=ruleLoadModel
	{ $current=$iv_ruleLoadModel.current; }
	EOF;

// Rule LoadModel
ruleLoadModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoadModelAccess().getModelKeyword_0());
		}
		otherlv_1='from'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoadModelAccess().getFromKeyword_1());
		}
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoadModelAccess().getLoadModelAction_2(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadModelAccess().getUrlEStringParserRuleCall_3_0());
				}
				lv_url_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadModelRule());
					}
					set(
						$current,
						"url",
						lv_url_3_0,
						"tmodel.grm.trm.Trm.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMAttribute
entryRuleMAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMAttributeRule()); }
	iv_ruleMAttribute=ruleMAttribute
	{ $current=$iv_ruleMAttribute.current; }
	EOF;

// Rule MAttribute
ruleMAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMAttributeAccess().getMAttributeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getMAttributeAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMAttributeAccess().getValueEStringParserRuleCall_3_0());
				}
				lv_value_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMAttributeRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"tmodel.grm.trm.Trm.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhereClause
entryRuleWhereClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereClauseRule()); }
	iv_ruleWhereClause=ruleWhereClause
	{ $current=$iv_ruleWhereClause.current; }
	EOF;

// Rule WhereClause
ruleWhereClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='where'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhereClauseAccess().getWhereKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhereClauseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhereClauseAccess().getConditionsMAttributeParserRuleCall_2_0());
				}
				lv_conditions_2_0=ruleMAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhereClauseRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_2_0,
						"tmodel.grm.trm.Trm.MAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getWhereClauseAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWhereClauseAccess().getConditionsMAttributeParserRuleCall_3_1_0());
					}
					lv_conditions_4_0=ruleMAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWhereClauseRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_4_0,
							"tmodel.grm.trm.Trm.MAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getWhereClauseAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAddAccess().getAddAction_0(),
					$current);
			}
		)
		otherlv_1='add'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getAddKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getCibleElementEStringParserRuleCall_2_0());
				}
				lv_cibleElement_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"cibleElement",
						lv_cibleElement_2_0,
						"tmodel.grm.trm.Trm.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='in'
			{
				newLeafNode(otherlv_3, grammarAccess.getAddAccess().getInKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddAccess().getInEStringParserRuleCall_3_1_0());
					}
					lv_in_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddRule());
						}
						set(
							$current,
							"in",
							lv_in_4_0,
							"tmodel.grm.trm.Trm.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='with'
			{
				newLeafNode(otherlv_5, grammarAccess.getAddAccess().getWithKeyword_4_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getAddAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAddAccess().getAttributesMAttributeParserRuleCall_4_2_0());
					}
					lv_attributes_7_0=ruleMAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAddRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_7_0,
							"tmodel.grm.trm.Trm.MAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getAddAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAddAccess().getAttributesMAttributeParserRuleCall_4_3_1_0());
						}
						lv_attributes_9_0=ruleMAttribute
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAddRule());
							}
							add(
								$current,
								"attributes",
								lv_attributes_9_0,
								"tmodel.grm.trm.Trm.MAttribute");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getAddAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getWhereClauseWhereClauseParserRuleCall_5_0());
				}
				lv_whereClause_11_0=ruleWhereClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"whereClause",
						lv_whereClause_11_0,
						"tmodel.grm.trm.Trm.WhereClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUpdateAccess().getUpdateAction_0(),
					$current);
			}
		)
		otherlv_1='update'
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdateAccess().getUpdateKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getCibleElementEStringParserRuleCall_2_0());
				}
				lv_cibleElement_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"cibleElement",
						lv_cibleElement_2_0,
						"tmodel.grm.trm.Trm.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='set'
		{
			newLeafNode(otherlv_3, grammarAccess.getUpdateAccess().getSetKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getUpdateAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getAttributesMAttributeParserRuleCall_5_0());
				}
				lv_attributes_5_0=ruleMAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_5_0,
						"tmodel.grm.trm.Trm.MAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getUpdateAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getAttributesMAttributeParserRuleCall_6_1_0());
					}
					lv_attributes_7_0=ruleMAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_7_0,
							"tmodel.grm.trm.Trm.MAttribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getUpdateAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getWhereClauseWhereClauseParserRuleCall_8_0());
				}
				lv_whereClause_9_0=ruleWhereClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"whereClause",
						lv_whereClause_9_0,
						"tmodel.grm.trm.Trm.WhereClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeleteAccess().getDeleteAction_0(),
					$current);
			}
		)
		otherlv_1='delete'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteAccess().getDeleteKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteAccess().getCibleElementEStringParserRuleCall_2_0());
				}
				lv_cibleElement_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteRule());
					}
					set(
						$current,
						"cibleElement",
						lv_cibleElement_2_0,
						"tmodel.grm.trm.Trm.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteAccess().getWhereClauseWhereClauseParserRuleCall_3_0());
				}
				lv_whereClause_3_0=ruleWhereClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteRule());
					}
					set(
						$current,
						"whereClause",
						lv_whereClause_3_0,
						"tmodel.grm.trm.Trm.WhereClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
